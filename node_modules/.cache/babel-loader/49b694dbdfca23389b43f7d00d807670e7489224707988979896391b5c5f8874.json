{"ast":null,"code":"var _jsxFileName = \"/Users/kaandai/Desktop/react-freash-canvas/src/CanvasComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CanvasComponent = () => {\n  _s();\n  const canvasRef = useRef(null);\n\n  // Variables for panning\n  const [panX, setPanX] = useState(0);\n  const [panY, setPanY] = useState(0);\n\n  // Variables for zooming\n  const [zoom, setZoom] = useState(1);\n  const zoomFactor = 1.01;\n  const minZoom = 0.6; // minimum zoom level\n  const maxZoom = 3; // maximum zoom level\n\n  // Variables for mouse panning\n  const [isPanning, setIsPanning] = useState(false);\n  const [startPanX, setStartPanX] = useState(0);\n  const [startPanY, setStartPanY] = useState(0);\n  const drawGrid = useCallback((ctx, canvas) => {\n    ctx.beginPath();\n    ctx.strokeStyle = \"lightgray\";\n    ctx.lineWidth = 2;\n\n    // calculate the number of lines to draw based on the zoom level\n    const numLines = Math.ceil(Math.max(canvas.width, canvas.height) / (5 * zoom));\n\n    // draw vertical lines\n    for (let i = -numLines; i <= numLines; i++) {\n      const x = panX % (15 * zoom) + i * 15 * zoom;\n      ctx.moveTo(x, -canvas.height);\n      ctx.lineTo(x, canvas.height);\n    }\n\n    // draw horizontal lines\n    for (let i = -numLines; i <= numLines; i++) {\n      const y = panY % (20 * zoom) + i * 15 * zoom;\n      ctx.moveTo(-canvas.width, y);\n      ctx.lineTo(canvas.width, y);\n    }\n    ctx.stroke();\n  }, [panX, panY, zoom]);\n\n  // Draw function\n  const draw = useCallback((ctx, canvas) => {\n    // clear canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // save context state\n    ctx.save();\n\n    // translate and scale context\n    ctx.translate(panX, panY);\n    ctx.scale(zoom, zoom);\n\n    // draw grid\n    drawGrid(ctx, canvas);\n\n    // restore context state\n    ctx.restore();\n\n    // request next animation frame\n    requestAnimationFrame(() => draw(ctx, canvas));\n  }, [panX, panY, zoom]);\n  const onDrop = event => {\n    event.preventDefault();\n    const data = event.dataTransfer.getData(\"text/plain\");\n\n    // Calculate the position where the item was dropped and add the item to the canvas items array\n    const rect = canvasRef.current.getBoundingClientRect();\n    const x = (event.clientX - rect.left - panX) / zoom;\n    const y = (event.clientY - rect.top - panY) / zoom;\n    setCanvasItems([...canvasItems, {\n      text: data,\n      x,\n      y\n    }]);\n  };\n  const onDragOver = event => {\n    event.preventDefault(); // This is necessary to allow a drop.\n  };\n\n  // useEffect to handle canvas drawing and events\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    let animationFrameId;\n    const render = () => {\n      draw(ctx, canvas);\n      animationFrameId = window.requestAnimationFrame(render);\n    };\n    render();\n\n    // Add event listeners for panning and zooming\n    const handleMouseDown = event => {\n      setIsPanning(true);\n      setStartPanX(event.clientX - panX);\n      setStartPanY(event.clientY - panY);\n    };\n    const handleMouseUp = () => {\n      setIsPanning(false);\n    };\n    const handleMouseMove = event => {\n      if (isPanning) {\n        setPanX(event.clientX - startPanX);\n        setPanY(event.clientY - startPanY);\n      }\n    };\n    const handleWheel = event => {\n      event.preventDefault();\n      let scale = zoom;\n      if (event.deltaY < 0) {\n        scale *= zoomFactor;\n      } else {\n        scale /= zoomFactor;\n      }\n      scale = Math.min(Math.max(scale, minZoom), maxZoom);\n      setZoom(scale);\n    };\n    canvas.addEventListener('mousedown', handleMouseDown);\n    canvas.addEventListener('mouseup', handleMouseUp);\n    canvas.addEventListener('mouseout', handleMouseUp);\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('wheel', handleWheel);\n    return () => {\n      window.cancelAnimationFrame(animationFrameId);\n      canvas.removeEventListener('mousedown', handleMouseDown);\n      canvas.removeEventListener('mouseup', handleMouseUp);\n      canvas.removeEventListener('mouseout', handleMouseUp);\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('wheel', handleWheel);\n    };\n  }, [draw]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    onDrop: onDrop,\n    onDragOver: onDragOver\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 12\n  }, this);\n};\n_s(CanvasComponent, \"RLBx/Pbswacu9ernX/wB/buRFo0=\");\n_c = CanvasComponent;\nexport default CanvasComponent;\nvar _c;\n$RefreshReg$(_c, \"CanvasComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","jsxDEV","_jsxDEV","CanvasComponent","_s","canvasRef","panX","setPanX","panY","setPanY","zoom","setZoom","zoomFactor","minZoom","maxZoom","isPanning","setIsPanning","startPanX","setStartPanX","startPanY","setStartPanY","drawGrid","ctx","canvas","beginPath","strokeStyle","lineWidth","numLines","Math","ceil","max","width","height","i","x","moveTo","lineTo","y","stroke","draw","clearRect","save","translate","scale","restore","requestAnimationFrame","onDrop","event","preventDefault","data","dataTransfer","getData","rect","current","getBoundingClientRect","clientX","left","clientY","top","setCanvasItems","canvasItems","text","onDragOver","getContext","window","innerWidth","innerHeight","animationFrameId","render","handleMouseDown","handleMouseUp","handleMouseMove","handleWheel","deltaY","min","addEventListener","cancelAnimationFrame","removeEventListener","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kaandai/Desktop/react-freash-canvas/src/CanvasComponent.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react';\nconst CanvasComponent = () => {\n    \n    const canvasRef = useRef(null);\n\n    // Variables for panning\n    const [panX, setPanX] = useState(0);\n    const [panY, setPanY] = useState(0);\n\n    // Variables for zooming\n    const [zoom, setZoom] = useState(1);\n    const zoomFactor = 1.01;\n    const minZoom = 0.6; // minimum zoom level\n    const maxZoom = 3; // maximum zoom level\n\n    // Variables for mouse panning\n    const [isPanning, setIsPanning] = useState(false);\n    const [startPanX, setStartPanX] = useState(0);\n    const [startPanY, setStartPanY] = useState(0);\n\n    const drawGrid = useCallback((ctx, canvas) => {\n      ctx.beginPath();\n      ctx.strokeStyle = \"lightgray\";\n      ctx.lineWidth = 2;\n    \n      // calculate the number of lines to draw based on the zoom level\n      const numLines = Math.ceil(Math.max(canvas.width, canvas.height) / (5 * zoom));\n      \n      // draw vertical lines\n      for (let i = -numLines; i <= numLines; i++) {\n        const x = (panX % (15 * zoom)) + i * 15 * zoom;\n        ctx.moveTo(x, -canvas.height);\n        ctx.lineTo(x, canvas.height);\n      }\n      \n      // draw horizontal lines\n      for (let i = -numLines; i <= numLines; i++) {\n        const y = (panY % (20 * zoom)) + i * 15 * zoom;\n        ctx.moveTo(-canvas.width, y);\n        ctx.lineTo(canvas.width, y);\n      }\n    \n      ctx.stroke();\n  }, [panX, panY, zoom]);\n\n    // Draw function\n    const draw = useCallback((ctx, canvas) => {\n        // clear canvas\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n        // save context state\n        ctx.save();\n\n        // translate and scale context\n        ctx.translate(panX, panY);\n        ctx.scale(zoom, zoom);\n\n        // draw grid\n        drawGrid(ctx, canvas);\n\n        // restore context state\n        ctx.restore();\n\n        // request next animation frame\n        requestAnimationFrame(() => draw(ctx, canvas));\n    }, [panX, panY, zoom]);\n\n    const onDrop = (event) => {\n      event.preventDefault();\n      const data = event.dataTransfer.getData(\"text/plain\");\n      \n      // Calculate the position where the item was dropped and add the item to the canvas items array\n      const rect = canvasRef.current.getBoundingClientRect();\n      const x = (event.clientX - rect.left - panX) / zoom;\n      const y = (event.clientY - rect.top - panY) / zoom;\n      setCanvasItems([...canvasItems, { text: data, x, y }]);\n  };\n\n    const onDragOver = (event) => {\n        event.preventDefault();  // This is necessary to allow a drop.\n    };\n\n    // useEffect to handle canvas drawing and events\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n        let animationFrameId;\n\n        const render = () => {\n            draw(ctx, canvas);\n            animationFrameId = window.requestAnimationFrame(render);\n        };\n        render();\n\n        // Add event listeners for panning and zooming\n        const handleMouseDown = (event) => {\n            setIsPanning(true);\n            setStartPanX(event.clientX - panX);\n            setStartPanY(event.clientY - panY);\n        };\n\n        const handleMouseUp = () => {\n            setIsPanning(false);\n        };\n\n        const handleMouseMove = (event) => {\n            if (isPanning) {\n                setPanX(event.clientX - startPanX);\n                setPanY(event.clientY - startPanY);\n            }\n        };\n\n        const handleWheel = (event) => {\n            event.preventDefault();\n\n            let scale = zoom;\n            if (event.deltaY < 0) {\n                scale *= zoomFactor;\n            } else {\n                scale /= zoomFactor;\n            }\n            scale = Math.min(Math.max(scale, minZoom), maxZoom);\n            setZoom(scale);\n        };\n\n        canvas.addEventListener('mousedown', handleMouseDown);\n        canvas.addEventListener('mouseup', handleMouseUp);\n        canvas.addEventListener('mouseout', handleMouseUp);\n        canvas.addEventListener('mousemove', handleMouseMove);\n        canvas.addEventListener('wheel', handleWheel);\n\n        return () => {\n            window.cancelAnimationFrame(animationFrameId);\n            canvas.removeEventListener('mousedown', handleMouseDown);\n            canvas.removeEventListener('mouseup', handleMouseUp);\n            canvas.removeEventListener('mouseout', handleMouseUp);\n            canvas.removeEventListener('mousemove', handleMouseMove);\n            canvas.removeEventListener('wheel', handleWheel);\n        };\n    }, [draw]);\n\n    return <canvas ref={canvasRef} onDrop={onDrop} onDragOver={onDragOver} />;\n};\n\nexport default CanvasComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}