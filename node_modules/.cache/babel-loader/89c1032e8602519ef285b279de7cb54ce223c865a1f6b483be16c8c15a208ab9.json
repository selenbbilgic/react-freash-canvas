{"ast":null,"code":"var _jsxFileName = \"/Users/kaandai/Desktop/react-freash-canvas/src/CanvasComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CanvasComponent = () => {\n  _s();\n  const canvasRef = useRef(null);\n\n  // Variables for panning\n  const [panX, setPanX] = useState(0);\n  const [panY, setPanY] = useState(0);\n\n  // Variables for zooming\n  const [zoom, setZoom] = useState(1);\n  const zoomFactor = 1.01;\n  const minZoom = 0.6; // minimum zoom level\n  const maxZoom = 3; // maximum zoom level\n\n  // Variables for mouse panning\n  const [isPanning, setIsPanning] = useState(false);\n  const [startPanX, setStartPanX] = useState(0);\n  const [startPanY, setStartPanY] = useState(0);\n  const drawGrid = (ctx, canvas) => {\n    ctx.beginPath();\n    ctx.strokeStyle = \"lightgray\";\n    ctx.lineWidth = 2;\n\n    // calculate the number of lines to draw based on the zoom level\n    const numLines = Math.ceil(Math.max(canvas.width, canvas.height) / (5 * zoom));\n\n    // draw vertical lines\n    for (let i = -numLines; i <= numLines; i++) {\n      const x = panX % (15 * zoom) + i * 15 * zoom;\n      ctx.moveTo(x, -canvas.height);\n      ctx.lineTo(x, canvas.height);\n    }\n\n    // draw horizontal lines\n    for (let i = -numLines; i <= numLines; i++) {\n      const y = panY % (20 * zoom) + i * 15 * zoom;\n      ctx.moveTo(-canvas.width, y);\n      ctx.lineTo(canvas.width, y);\n    }\n    ctx.stroke();\n  };\n\n  // Draw function\n  const draw = useCallback((ctx, canvas) => {\n    // clear canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // save context state\n    ctx.save();\n\n    // translate and scale context\n    ctx.translate(panX, panY);\n    ctx.scale(zoom, zoom);\n\n    // draw grid\n    drawGrid(ctx, canvas);\n\n    // restore context state\n    ctx.restore();\n\n    // request next animation frame\n    requestAnimationFrame(() => draw(ctx, canvas));\n  }, [panX, panY, zoom]);\n\n  // useEffect to handle canvas drawing and events\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const appDiv = document.querySelector('.App');\n    canvas.width = appDiv.offsetWidth;\n    canvas.height = appDiv.offsetHeight;\n    let animationFrameId;\n    const render = () => {\n      draw(ctx, canvas);\n      animationFrameId = window.requestAnimationFrame(render);\n    };\n    render();\n\n    // Add event listeners for panning and zooming\n    const handleMouseDown = event => {\n      setIsPanning(true);\n      setStartPanX(event.clientX - panX);\n      setStartPanY(event.clientY - panY);\n    };\n    const handleMouseMove = event => {\n      if (isPanning) {\n        // calculate new pan values\n        let newPanX = event.clientX - startPanX;\n        let newPanY = event.clientY - startPanY;\n\n        // update pan values\n        setPanX(newPanX);\n        setPanY(newPanY);\n      }\n    };\n    const handleWheel = event => {\n      event.preventDefault();\n\n      // update zoom based on scroll direction\n      let newZoom;\n      if (event.deltaY < 0) {\n        newZoom = zoom * zoomFactor;\n      } else {\n        newZoom = zoom / zoomFactor;\n      }\n\n      // update zoom value\n      setZoom(newZoom);\n    };\n    const handleMouseUp = () => setIsPanning(false);\n    canvas.addEventListener('mousedown', handleMouseDown);\n    canvas.addEventListener('mousemove', handleMouseMove);\n    window.addEventListener('mouseup', handleMouseUp);\n    canvas.addEventListener('wheel', handleWheel);\n    return () => {\n      window.cancelAnimationFrame(animationFrameId);\n      canvas.removeEventListener('mousedown', handleMouseDown);\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('mouseup', handleMouseUp);\n      canvas.removeEventListener('wheel', handleWheel);\n    };\n  }, [draw, panX, panY, startPanX, startPanY, isPanning, zoom, zoomFactor, minZoom, maxZoom]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 12\n  }, this);\n};\n_s(CanvasComponent, \"9IN/yuFVWicPPd4aAEp/bMH5FIw=\");\n_c = CanvasComponent;\nexport default CanvasComponent;\nvar _c;\n$RefreshReg$(_c, \"CanvasComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","jsxDEV","_jsxDEV","CanvasComponent","_s","canvasRef","panX","setPanX","panY","setPanY","zoom","setZoom","zoomFactor","minZoom","maxZoom","isPanning","setIsPanning","startPanX","setStartPanX","startPanY","setStartPanY","drawGrid","ctx","canvas","beginPath","strokeStyle","lineWidth","numLines","Math","ceil","max","width","height","i","x","moveTo","lineTo","y","stroke","draw","clearRect","save","translate","scale","restore","requestAnimationFrame","current","getContext","appDiv","document","querySelector","offsetWidth","offsetHeight","animationFrameId","render","window","handleMouseDown","event","clientX","clientY","handleMouseMove","newPanX","newPanY","handleWheel","preventDefault","newZoom","deltaY","handleMouseUp","addEventListener","cancelAnimationFrame","removeEventListener","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kaandai/Desktop/react-freash-canvas/src/CanvasComponent.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react';\nconst CanvasComponent = () => {\n    \n    const canvasRef = useRef(null);\n\n    // Variables for panning\n    const [panX, setPanX] = useState(0);\n    const [panY, setPanY] = useState(0);\n\n    // Variables for zooming\n    const [zoom, setZoom] = useState(1);\n    const zoomFactor = 1.01;\n    const minZoom = 0.6; // minimum zoom level\n    const maxZoom = 3; // maximum zoom level\n\n    // Variables for mouse panning\n    const [isPanning, setIsPanning] = useState(false);\n    const [startPanX, setStartPanX] = useState(0);\n    const [startPanY, setStartPanY] = useState(0);\n\n    const drawGrid = (ctx, canvas) => {\n        ctx.beginPath();\n        ctx.strokeStyle = \"lightgray\";\n        ctx.lineWidth = 2;\n      \n        // calculate the number of lines to draw based on the zoom level\n        const numLines = Math.ceil(Math.max(canvas.width, canvas.height) / (5 * zoom));\n        \n        // draw vertical lines\n        for (let i = -numLines; i <= numLines; i++) {\n          const x = (panX % (15 * zoom)) + i * 15 * zoom;\n          ctx.moveTo(x, -canvas.height);\n          ctx.lineTo(x, canvas.height);\n        }\n        \n        // draw horizontal lines\n        for (let i = -numLines; i <= numLines; i++) {\n          const y = (panY % (20 * zoom)) + i * 15 * zoom;\n          ctx.moveTo(-canvas.width, y);\n          ctx.lineTo(canvas.width, y);\n        }\n      \n        ctx.stroke();\n      };\n      \n\n    // Draw function\n    const draw = useCallback((ctx, canvas) => {\n        // clear canvas\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n        // save context state\n        ctx.save();\n\n        // translate and scale context\n        ctx.translate(panX, panY);\n        ctx.scale(zoom, zoom);\n\n        // draw grid\n        drawGrid(ctx, canvas);\n\n        // restore context state\n        ctx.restore();\n\n        // request next animation frame\n        requestAnimationFrame(() => draw(ctx, canvas));\n    }, [panX, panY, zoom]);\n\n    // useEffect to handle canvas drawing and events\n    useEffect(() => {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      const appDiv = document.querySelector('.App');\n      canvas.width = appDiv.offsetWidth;\n      canvas.height = appDiv.offsetHeight;\n        let animationFrameId;\n\n        const render = () => {\n            draw(ctx, canvas);\n            animationFrameId = window.requestAnimationFrame(render);\n        };\n        render();\n\n        // Add event listeners for panning and zooming\n        const handleMouseDown = (event) => {\n            setIsPanning(true);\n            setStartPanX(event.clientX - panX);\n            setStartPanY(event.clientY - panY);\n        };\n        const handleMouseMove = (event) => {\n            if (isPanning) {\n              // calculate new pan values\n              let newPanX = event.clientX - startPanX;\n              let newPanY = event.clientY - startPanY;\n          \n              // update pan values\n              setPanX(newPanX);\n              setPanY(newPanY);\n            }\n          };\n          const handleWheel = (event) => {\n            event.preventDefault();\n          \n            // update zoom based on scroll direction\n            let newZoom;\n            if (event.deltaY < 0) {\n              newZoom = zoom * zoomFactor;\n            } else {\n              newZoom = zoom / zoomFactor;\n            }\n          \n            // update zoom value\n            setZoom(newZoom);\n          };\n          \n        const handleMouseUp = () => setIsPanning(false);\n\n\n        canvas.addEventListener('mousedown', handleMouseDown);\n        canvas.addEventListener('mousemove', handleMouseMove);\n        window.addEventListener('mouseup', handleMouseUp);\n        canvas.addEventListener('wheel', handleWheel);\n\n        return () => {\n\n            window.cancelAnimationFrame(animationFrameId);\n            canvas.removeEventListener('mousedown', handleMouseDown);\n            canvas.removeEventListener('mousemove', handleMouseMove);\n            window.removeEventListener('mouseup', handleMouseUp);\n            canvas.removeEventListener('wheel', handleWheel);\n        };\n      }, [draw, panX, panY, startPanX, startPanY, isPanning, zoom, zoomFactor, minZoom, maxZoom]);\n\n    return <canvas ref={canvasRef} />;\n};\nexport default CanvasComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}