{"ast":null,"code":"var _jsxFileName = \"/Users/kaandai/Desktop/react-freash-canvas/src/CanvasComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CanvasComponent = () => {\n  _s();\n  const canvasRef = useRef(null);\n\n  // Variables for panning\n  const [panX, setPanX] = useState(0);\n  const [panY, setPanY] = useState(0);\n\n  // Variables for zooming\n  const [zoom, setZoom] = useState(1);\n  const zoomFactor = 1.01;\n  const minZoom = 0.6; // minimum zoom level\n  const maxZoom = 3; // maximum zoom level\n\n  // Variables for mouse panning\n  const [isPanning, setIsPanning] = useState(false);\n  const [startPanX, setStartPanX] = useState(0);\n  const [startPanY, setStartPanY] = useState(0);\n\n  // Draw function\n  const draw = useCallback((ctx, canvas) => {\n    // clear canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // save context state\n    ctx.save();\n\n    // translate and scale context\n    ctx.translate(panX, panY);\n    ctx.scale(zoom, zoom);\n\n    // draw grid\n    drawGrid(ctx, canvas);\n\n    // restore context state\n    ctx.restore();\n\n    // request next animation frame\n    requestAnimationFrame(() => draw(ctx, canvas));\n  }, [panX, panY, zoom]);\n  const onDrop = event => {\n    event.preventDefault();\n    const data = event.dataTransfer.getData(\"text/plain\");\n    console.log(data); // Now you can use the dropped data to update your component state or perform other actions.\n  };\n\n  const onDragOver = event => {\n    event.preventDefault(); // This is necessary to allow a drop.\n  };\n\n  // useEffect to handle canvas drawing and events\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    let animationFrameId;\n    const render = () => {\n      draw(ctx, canvas);\n      animationFrameId = window.requestAnimationFrame(render);\n    };\n    render();\n\n    // Add event listeners for panning and zooming\n    const handleMouseDown = event => {\n      setIsPanning(true);\n      setStartPanX(event.clientX - panX);\n      setStartPanY(event.clientY - panY);\n    };\n    const handleMouseUp = () => {\n      setIsPanning(false);\n    };\n    const handleMouseMove = event => {\n      if (isPanning) {\n        setPanX(event.clientX - startPanX);\n        setPanY(event.clientY - startPanY);\n      }\n    };\n    const handleWheel = event => {\n      event.preventDefault();\n      let scale = zoom;\n      if (event.deltaY < 0) {\n        scale *= zoomFactor;\n      } else {\n        scale /= zoomFactor;\n      }\n      scale = Math.min(Math.max(scale, minZoom), maxZoom);\n      setZoom(scale);\n    };\n    canvas.addEventListener('mousedown', handleMouseDown);\n    canvas.addEventListener('mouseup', handleMouseUp);\n    canvas.addEventListener('mouseout', handleMouseUp);\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('wheel', handleWheel);\n    return () => {\n      window.cancelAnimationFrame(animationFrameId);\n      canvas.removeEventListener('mousedown', handleMouseDown);\n      canvas.removeEventListener('mouseup', handleMouseUp);\n      canvas.removeEventListener('mouseout', handleMouseUp);\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('wheel', handleWheel);\n    };\n  }, [draw]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    onDrop: onDrop,\n    onDragOver: onDragOver\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 12\n  }, this);\n};\n_s(CanvasComponent, \"9IN/yuFVWicPPd4aAEp/bMH5FIw=\");\n_c = CanvasComponent;\nexport default CanvasComponent;\nvar _c;\n$RefreshReg$(_c, \"CanvasComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","jsxDEV","_jsxDEV","CanvasComponent","_s","canvasRef","panX","setPanX","panY","setPanY","zoom","setZoom","zoomFactor","minZoom","maxZoom","isPanning","setIsPanning","startPanX","setStartPanX","startPanY","setStartPanY","draw","ctx","canvas","clearRect","width","height","save","translate","scale","drawGrid","restore","requestAnimationFrame","onDrop","event","preventDefault","data","dataTransfer","getData","console","log","onDragOver","current","getContext","window","innerWidth","innerHeight","animationFrameId","render","handleMouseDown","clientX","clientY","handleMouseUp","handleMouseMove","handleWheel","deltaY","Math","min","max","addEventListener","cancelAnimationFrame","removeEventListener","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kaandai/Desktop/react-freash-canvas/src/CanvasComponent.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react';\nconst CanvasComponent = () => {\n    \n    const canvasRef = useRef(null);\n\n    // Variables for panning\n    const [panX, setPanX] = useState(0);\n    const [panY, setPanY] = useState(0);\n\n    // Variables for zooming\n    const [zoom, setZoom] = useState(1);\n    const zoomFactor = 1.01;\n    const minZoom = 0.6; // minimum zoom level\n    const maxZoom = 3; // maximum zoom level\n\n    // Variables for mouse panning\n    const [isPanning, setIsPanning] = useState(false);\n    const [startPanX, setStartPanX] = useState(0);\n    const [startPanY, setStartPanY] = useState(0);\n\n    // Draw function\n    const draw = useCallback((ctx, canvas) => {\n        // clear canvas\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n        // save context state\n        ctx.save();\n\n        // translate and scale context\n        ctx.translate(panX, panY);\n        ctx.scale(zoom, zoom);\n\n        // draw grid\n        drawGrid(ctx, canvas);\n\n        // restore context state\n        ctx.restore();\n\n        // request next animation frame\n        requestAnimationFrame(() => draw(ctx, canvas));\n    }, [panX, panY, zoom]);\n\n    const onDrop = (event) => {\n        event.preventDefault();\n        const data = event.dataTransfer.getData(\"text/plain\");\n        console.log(data); // Now you can use the dropped data to update your component state or perform other actions.\n    };\n\n    const onDragOver = (event) => {\n        event.preventDefault();  // This is necessary to allow a drop.\n    };\n\n    // useEffect to handle canvas drawing and events\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n        let animationFrameId;\n\n        const render = () => {\n            draw(ctx, canvas);\n            animationFrameId = window.requestAnimationFrame(render);\n        };\n        render();\n\n        // Add event listeners for panning and zooming\n        const handleMouseDown = (event) => {\n            setIsPanning(true);\n            setStartPanX(event.clientX - panX);\n            setStartPanY(event.clientY - panY);\n        };\n\n        const handleMouseUp = () => {\n            setIsPanning(false);\n        };\n\n        const handleMouseMove = (event) => {\n            if (isPanning) {\n                setPanX(event.clientX - startPanX);\n                setPanY(event.clientY - startPanY);\n            }\n        };\n\n        const handleWheel = (event) => {\n            event.preventDefault();\n\n            let scale = zoom;\n            if (event.deltaY < 0) {\n                scale *= zoomFactor;\n            } else {\n                scale /= zoomFactor;\n            }\n            scale = Math.min(Math.max(scale, minZoom), maxZoom);\n            setZoom(scale);\n        };\n\n        canvas.addEventListener('mousedown', handleMouseDown);\n        canvas.addEventListener('mouseup', handleMouseUp);\n        canvas.addEventListener('mouseout', handleMouseUp);\n        canvas.addEventListener('mousemove', handleMouseMove);\n        canvas.addEventListener('wheel', handleWheel);\n\n        return () => {\n            window.cancelAnimationFrame(animationFrameId);\n            canvas.removeEventListener('mousedown', handleMouseDown);\n            canvas.removeEventListener('mouseup', handleMouseUp);\n            canvas.removeEventListener('mouseout', handleMouseUp);\n            canvas.removeEventListener('mousemove', handleMouseMove);\n            canvas.removeEventListener('wheel', handleWheel);\n        };\n    }, [draw]);\n\n    return <canvas ref={canvasRef} onDrop={onDrop} onDragOver={onDragOver} />;\n};\n\nexport default CanvasComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}