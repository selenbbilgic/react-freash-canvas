{"ast":null,"code":"var _jsxFileName = \"/Users/kaandai/Desktop/fresh-canvas/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport ReactDOM from 'react-dom';\n//import logo from './logo.svg';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  console.log(\"ccccc\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nconst CanvasComponent = () => {\n  _s();\n  const canvasRef = useRef(null);\n\n  // Variables for panning\n  const [panX, setPanX] = useState(0);\n  const [panY, setPanY] = useState(0);\n\n  // Variables for zooming\n  const [zoom, setZoom] = useState(1);\n  const zoomFactor = 1.01;\n  const minZoom = 0.6; // minimum zoom level\n  const maxZoom = 3; // maximum zoom level\n\n  // Variables for mouse panning\n  const [isPanning, setIsPanning] = useState(false);\n  const [startPanX, setStartPanX] = useState(0);\n  const [startPanY, setStartPanY] = useState(0);\n\n  // Draw grid function\n  const drawGrid = (ctx, canvas) => {\n    ctx.beginPath();\n    ctx.strokeStyle = \"lightgray\";\n    ctx.lineWidth = 2;\n    // add code here to draw grid lines\n  };\n\n  // Draw function\n  const draw = useCallback((ctx, canvas) => {\n    // clear canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // save context state\n    ctx.save();\n\n    // translate and scale context\n    ctx.translate(panX, panY);\n    ctx.scale(zoom, zoom);\n\n    // draw grid\n    drawGrid(ctx, canvas);\n\n    // restore context state\n    ctx.restore();\n\n    // request next animation frame\n    requestAnimationFrame(() => draw(ctx, canvas));\n  }, [panX, panY, zoom]);\n\n  // useEffect to handle canvas drawing and events\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let animationFrameId;\n    const render = () => {\n      draw(ctx, canvas);\n      animationFrameId = window.requestAnimationFrame(render);\n    };\n    render();\n\n    // Add event listeners for panning and zooming\n    const handleMouseDown = event => {\n      setIsPanning(true);\n      setStartPanX(event.clientX - panX);\n      setStartPanY(event.clientY - panY);\n    };\n    const handleMouseMove = event => {\n      if (isPanning) {\n        // calculate new pan values\n        let newPanX = event.clientX - startPanX;\n        let newPanY = event.clientY - startPanY;\n\n        // add constraints to panning\n        if (newPanX < -100) {\n          newPanX = -100;\n        } else if (newPanX > 100) {\n          newPanX = 100;\n        }\n        if (newPanY < -100) {\n          newPanY = -100;\n        } else if (newPanY > 100) {\n          newPanY = 100;\n        }\n\n        // update pan values\n        setPanX(newPanX);\n        setPanY(newPanY);\n      }\n    };\n    const handleMouseUp = () => setIsPanning(false);\n    const handleWheel = event => {\n      event.preventDefault();\n\n      // update zoom based on scroll direction\n      let newZoom;\n      if (event.deltaY < 0) {\n        newZoom = zoom * zoomFactor;\n      } else {\n        newZoom = zoom / zoomFactor;\n      }\n      // check if new zoom value is within bounds\n      if (newZoom >= minZoom && newZoom <= maxZoom) {\n        // update zoom value\n        setZoom(newZoom);\n      }\n    };\n    canvas.addEventListener('mousedown', handleMouseDown);\n    canvas.addEventListener('mousemove', handleMouseMove);\n    window.addEventListener('mouseup', handleMouseUp);\n    canvas.addEventListener('wheel', handleWheel);\n    return () => {\n      window.cancelAnimationFrame(animationFrameId);\n      canvas.removeEventListener('mousedown', handleMouseDown);\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('mouseup', handleMouseUp);\n      canvas.removeEventListener('wheel', handleWheel);\n    };\n  }, [draw, panX, panY, startPanX, startPanY, isPanning, zoom, zoomFactor, minZoom, maxZoom]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 12\n  }, this);\n};\n_s(CanvasComponent, \"9IN/yuFVWicPPd4aAEp/bMH5FIw=\");\n_c2 = CanvasComponent;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 138,\n  columnNumber: 17\n}, this), document.getElementById('root'));\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"CanvasComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","ReactDOM","jsxDEV","_jsxDEV","App","console","log","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","CanvasComponent","_s","canvasRef","panX","setPanX","panY","setPanY","zoom","setZoom","zoomFactor","minZoom","maxZoom","isPanning","setIsPanning","startPanX","setStartPanX","startPanY","setStartPanY","drawGrid","ctx","canvas","beginPath","strokeStyle","lineWidth","draw","clearRect","width","height","save","translate","scale","restore","requestAnimationFrame","current","getContext","animationFrameId","render","window","handleMouseDown","event","clientX","clientY","handleMouseMove","newPanX","newPanY","handleMouseUp","handleWheel","preventDefault","newZoom","deltaY","addEventListener","cancelAnimationFrame","removeEventListener","ref","_c2","document","getElementById","$RefreshReg$"],"sources":["/Users/kaandai/Desktop/fresh-canvas/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport ReactDOM from 'react-dom';\n//import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  console.log(\"ccccc\");\n  return (\n    <div className=\"App\">\n     \n    </div>\n  );\n}\nconst CanvasComponent = () => {\n    const canvasRef = useRef(null);\n\n    // Variables for panning\n    const [panX, setPanX] = useState(0);\n    const [panY, setPanY] = useState(0);\n\n    // Variables for zooming\n    const [zoom, setZoom] = useState(1);\n    const zoomFactor = 1.01;\n    const minZoom = 0.6; // minimum zoom level\n    const maxZoom = 3; // maximum zoom level\n\n    // Variables for mouse panning\n    const [isPanning, setIsPanning] = useState(false);\n    const [startPanX, setStartPanX] = useState(0);\n    const [startPanY, setStartPanY] = useState(0);\n\n    // Draw grid function\n    const drawGrid = (ctx, canvas) => {\n        ctx.beginPath();\n        ctx.strokeStyle = \"lightgray\";\n        ctx.lineWidth = 2;\n        // add code here to draw grid lines\n    };\n\n    // Draw function\n    const draw = useCallback((ctx, canvas) => {\n        // clear canvas\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n        // save context state\n        ctx.save();\n\n        // translate and scale context\n        ctx.translate(panX, panY);\n        ctx.scale(zoom, zoom);\n\n        // draw grid\n        drawGrid(ctx, canvas);\n\n        // restore context state\n        ctx.restore();\n\n        // request next animation frame\n        requestAnimationFrame(() => draw(ctx, canvas));\n    }, [panX, panY, zoom]);\n\n    // useEffect to handle canvas drawing and events\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        let animationFrameId;\n\n        const render = () => {\n            draw(ctx, canvas);\n            animationFrameId = window.requestAnimationFrame(render);\n        };\n        render();\n\n        // Add event listeners for panning and zooming\n        const handleMouseDown = (event) => {\n            setIsPanning(true);\n            setStartPanX(event.clientX - panX);\n            setStartPanY(event.clientY - panY);\n        };\n        const handleMouseMove = (event) => {\n            if (isPanning) {\n                // calculate new pan values\n                let newPanX = event.clientX - startPanX;\n                let newPanY = event.clientY - startPanY;\n    \n                // add constraints to panning\n                if (newPanX < -100) {\n                    newPanX = -100;\n                } else if (newPanX > 100) {\n                    newPanX = 100;\n                }\n                if (newPanY < -100) {\n                    newPanY = -100;\n                } else if (newPanY > 100) {\n                    newPanY = 100;\n                }\n    \n                // update pan values\n                setPanX(newPanX);\n                setPanY(newPanY);\n            }\n        };\n        const handleMouseUp = () => setIsPanning(false);\n        const handleWheel = (event) => {\n            event.preventDefault();\n\n            // update zoom based on scroll direction\n            let newZoom;\n            if (event.deltaY <0) {\n                newZoom = zoom * zoomFactor;\n            } else {\n                newZoom = zoom / zoomFactor;\n            }\n            // check if new zoom value is within bounds\n            if (newZoom >= minZoom && newZoom <= maxZoom) {\n                // update zoom value\n                setZoom(newZoom);\n            }\n        };\n\n        canvas.addEventListener('mousedown', handleMouseDown);\n        canvas.addEventListener('mousemove', handleMouseMove);\n        window.addEventListener('mouseup', handleMouseUp);\n        canvas.addEventListener('wheel', handleWheel);\n\n        return () => {\n            window.cancelAnimationFrame(animationFrameId);\n            canvas.removeEventListener('mousedown', handleMouseDown);\n            canvas.removeEventListener('mousemove', handleMouseMove);\n            window.removeEventListener('mouseup', handleMouseUp);\n            canvas.removeEventListener('wheel', handleWheel);\n        };\n    }, [draw, panX, panY, startPanX, startPanY, isPanning, zoom, zoomFactor, minZoom, maxZoom]);\n\n    return <canvas ref={canvasRef} />;\n};\n\nReactDOM.render(<App />,document.getElementById('root'));\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}